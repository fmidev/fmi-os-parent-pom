<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>fi.fmi</groupId>
  <artifactId>fmi-os-parent-pom</artifactId>
  <version>0.6</version>
  <packaging>pom</packaging>

  <name>FMI OS Root Parent POM</name>
  <description>The root POM for for Open Source maven projects from FMI</description>


  <url>https://github.com/${github-repo-owner}/${project.artifactId}</url>


  <organization>
    <name>FMI OpenSource community</name>
    <url>http://ilmatieteenlaitos.fi</url>
  </organization>

  <ciManagement>
    <system>Travis CI</system>
    <!-- url>${travis.job.url}</url -->
  </ciManagement>

  <scm>
    <connection>${scm-url}</connection>
    <developerConnection>${scm-url}</developerConnection>
    <url>${scm-web-url}</url>
    <tag>fmi-os-parent-pom-0.6</tag>
  </scm>

  <!-- Two-phase release to github as defined at http://stackoverflow.com/questions/14013644/hosting-a-maven-repository-on-github-->
  <distributionManagement>
    <repository>
      <id>internal.repo</id>
      <name>Temporary Staging Repository</name>
      <url>file://${project.build.directory}/mvn-repo</url>
    </repository>
  </distributionManagement>


  <properties>
    <!-- Most of these SHOULD NOT be overriden in child POMs -->
    <project.scm.id>github</project.scm.id>
    <github-repo-owner>ilkkarinne</github-repo-owner>
    <github.global.server>github</github.global.server>
    <github-mvn-repo>fmi-os-mvn-repo</github-mvn-repo>
    <scm-url>scm:git:https://github.com/${github-repo-owner}/${project.artifactId}.git/</scm-url>
    <scm-web-url>https://github.com/${github-repo-owner}/${project.artifactId}</scm-web-url>

    <!-- site-url>file:///var/doc/mavensites/${project.artifactId}/${project.version}</site-url -->

    <!-- This is one of those magic properties available to builds. Format the value to a more standard format -->
    <!-- http://maven.apache.org/guides/introduction/introduction-to-the-pom.html#Available_Variables -->
    <maven.build.timestamp.format>yyyy-MM-dd'T'HH:mm:ssZ</maven.build.timestamp.format>
    <!-- Get rid of that pesky encoding warning -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <java.version>1.8</java.version>
    <!-- We default to java.version in source and target versions. -->
    <!-- A child project may thus override either source or target version, -->
    <!-- or override them both by overriding property java.version. -->
    <maven-compiler-plugin.source.version>${java.version}</maven-compiler-plugin.source.version>
    <maven-compiler-plugin.target.version>${java.version}</maven-compiler-plugin.target.version>
    <maven-assembly-plugin.version>2.4</maven-assembly-plugin.version>
    <maven-clean-plugin.version>2.5</maven-clean-plugin.version>

    <fmi-maven-skin.version>1.0</fmi-maven-skin.version>
    <maven-antrun-plugin.version>1.7</maven-antrun-plugin.version>
    <!-- antrun plugin's sshexec target needs this -->
    <ant-jsch.version>1.9.2</ant-jsch.version>
    <maven-assembly-plugin.version>2.4</maven-assembly-plugin.version>
    <assertj-assertions-generator-maven-plugin.version>1.1.0</assertj-assertions-generator-maven-plugin.version>
    <build-helper-maven-plugin.version>1.8</build-helper-maven-plugin.version>
    <buildnumber-maven-plugin.version>1.2</buildnumber-maven-plugin.version>
    <maven-bundle-plugin.version>2.4.0</maven-bundle-plugin.version>
    <maven-changelog-plugin.version>2.2</maven-changelog-plugin.version>
    <maven-clean-plugin.version>2.5</maven-clean-plugin.version>
    <cobertura-maven-plugin.version>2.6</cobertura-maven-plugin.version>
    <maven-compiler-plugin.version>3.1</maven-compiler-plugin.version>
    <maven-dependency-plugin.version>2.8</maven-dependency-plugin.version>
    <maven-deploy-plugin.version>2.8.1</maven-deploy-plugin.version>
    <maven-ear-plugin.version>2.8</maven-ear-plugin.version>
    <maven-ejb-plugin.version>2.3</maven-ejb-plugin.version>
    <maven-eclipse-plugin.version>2.9</maven-eclipse-plugin.version>
    <maven-enforcer-plugin.version>1.3.1</maven-enforcer-plugin.version>
    <findbugs-maven-plugin.version>2.5.3</findbugs-maven-plugin.version>
    <maven-install-plugin.version>2.5.1</maven-install-plugin.version>
    <maven-jar-plugin.version>2.4</maven-jar-plugin.version>
    <maven-javadoc-plugin.version>2.9.1</maven-javadoc-plugin.version>
    <jdepend-maven-plugin.version>2.0-beta-2</jdepend-maven-plugin.version>
    <!-- We don't use the newest 2.4, because <https://jira.fmi.fi/browse/INFRA-277> -->
    <maven-jxr-plugin.version>2.3</maven-jxr-plugin.version>
    <l10n-maven-plugin.version>1.0-alpha-2</l10n-maven-plugin.version>
    <maven-linkcheck-plugin.version>1.1</maven-linkcheck-plugin.version>
    <maven-plugin-plugin.version>3.2</maven-plugin-plugin.version>
    <maven-project-info-reports-plugin.version>2.7</maven-project-info-reports-plugin.version>
    <maven-rar-plugin.version>2.3</maven-rar-plugin.version>
    <maven-release-plugin.version>2.5.3</maven-release-plugin.version>
    <maven-resources-plugin.version>2.6</maven-resources-plugin.version>
    <maven-shade-plugin.version>2.2</maven-shade-plugin.version>
    <maven-site-plugin.version>3.3</maven-site-plugin.version>
    <!-- Doxia modules enable documentation syntaxes to be used in documentation. -->
    <!-- They are dependencies of maven-site-plugin -->
    <doxia-module-confluence.version>1.5</doxia-module-confluence.version>
    <maven-doxia-module-markdown.version>1.3</maven-doxia-module-markdown.version>
    <doxia-module-xhtml.version>1.5</doxia-module-xhtml.version>
    <maven-source-plugin.version>2.2.1</maven-source-plugin.version>
    <maven-surefire-plugin.version>2.16</maven-surefire-plugin.version>
    <maven-surefire-report-plugin.version>2.16</maven-surefire-report-plugin.version>
    <taglist-maven-plugin.version>2.4</taglist-maven-plugin.version>
    <tomcat6-maven-plugin.version>2.2</tomcat6-maven-plugin.version>
    <tomcat7-maven-plugin.version>2.2</tomcat7-maven-plugin.version>
    <versions-maven-plugin.version>2.1</versions-maven-plugin.version>
    <maven-war-plugin.version>2.4</maven-war-plugin.version>
    <m2e-lifecycle-mapping.version>1.0.0</m2e-lifecycle-mapping.version>

    <assertj-core.version>1.5.0</assertj-core.version>
    <fmi-common-test.version>0.1-SNAPSHOT</fmi-common-test.version>
    <fongo.version>1.3.0</fongo.version>
    <hamcrest.version>1.3</hamcrest.version>
    <junit.version>4.11</junit.version>
    <JUnitParams.version>1.0.2</JUnitParams.version>
    <mockito.version>1.9.5</mockito.version>
    <powermock.version>1.5.3</powermock.version>


    <groovy.version>2.1.0</groovy.version>
    <logback.version>1.0.13</logback.version>
    <log4j.version>1.2.14</log4j.version>
    <slf4j.version>1.7.5</slf4j.version>
    <sysout-over-slf4j.version>1.0.2</sysout-over-slf4j.version>


    <freemarker.version>2.3.20</freemarker.version>
    <gson.version>2.2.4</gson.version>
    <guava.version>16.0</guava.version>
    <jackson.version>2.1.3</jackson.version>
    <jide.version>3.2.2</jide.version>
    <joda-time.version>2.3</joda-time.version>
    <practicalxml.version>1.1.17</practicalxml.version>
    <velocity.version>1.7</velocity.version>

    <!-- Spring and related -->
    <aspectj.version>1.7.0</aspectj.version>
    <spring.version>3.1.2.RELEASE</spring.version>
    <spring-data.version>1.1.1.RELEASE</spring-data.version>
    <spring-integration.version>2.2.1.RELEASE</spring-integration.version>
    <spring-rabbit.version>1.2.0.RELEASE</spring-rabbit.version>
    <spring-security.version>3.1.2.RELEASE</spring-security.version>


    <!-- Quality plugins -->
    <findbugs-jsr305.version>2.0.3</findbugs-jsr305.version>
    <findbugs-annotations.version>2.0.3</findbugs-annotations.version>


    <maven-bundle-plugin.manifest.path>${project.build.outputDirectory}/META-INF/MANIFEST.MF</maven-bundle-plugin.manifest.path>

    <!-- This is just because HEAD http://search.maven.org/ responds with 404 -->
    <maven-linkcheck-plugin.httpMethod>GET</maven-linkcheck-plugin.httpMethod>

    <!-- The following two properties are empty intentionally -->
    <!-- They are quite environment specific and should be set via activating a profile, for instance -->
    <maven-javadoc-plugin.javadoc.version />
    <maven-javadoc-plugin.javadoc.executable />

    <!-- This MUST point to an existing assembly descriptor. -->
    <!-- You may leave it as-is, and place a file at the path below, or override the property -->
    <!-- and place your descriptor at that path. -->
    <maven-assembly-plugin.descriptor>src/assembly/zip.xml</maven-assembly-plugin.descriptor>
    <!-- This MUST be replaced in the child POM -->
    <assembly.mainClass>fi.fmi.nonexisting.ReplaceThis</assembly.mainClass>
    <!-- By default we want to include dependencies as libraries... -->
    <assembly.addClasspath>true</assembly.addClasspath>
    <!-- in a sub-folder "lib". -->
    <assembly.classpathPrefix>lib</assembly.classpathPrefix>


    <maven-project-info-reports-plugin.showAvatarImages>false</maven-project-info-reports-plugin.showAvatarImages>


    <integration-test-src-path>src/test-integration/java</integration-test-src-path>
    <integration-test-resource-path>src/test-integration/resources</integration-test-resource-path>


    <findbugs.effort>Max</findbugs.effort>
    <findbugs.includeTests>true</findbugs.includeTests>
    <findbugs.maxRank>20</findbugs.maxRank>
    <findbugs.threshold>Low</findbugs.threshold>
    <findbugs.failOnError>true</findbugs.failOnError>
    <findbugs.skip>false</findbugs.skip>
    <!-- Fork options, using plugin defaults -->
    <findbugs.fork>true</findbugs.fork>
    <findbugs.jvmArgs />
    <findbugs.maxHeap>512</findbugs.maxHeap>
    <findbugs.timeout>600000</findbugs.timeout>


  </properties>

  <dependencyManagement>
    <dependencies>

      <!-- Test-scoped dependencies -->

      <dependency>
        <!-- Intuitive assertion library to be used in conjunction with JUnit -->
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>${assertj-core.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-library</artifactId>
        <version>${hamcrest.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <!-- The de facto standard in java Unit Testing -->
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <!-- A popular and rather intuitive mocking framework -->
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <!-- Mocking library overcoming restrictions of traditional mocking libraries. -->
        <!-- Useful with some 3rd party libraries. Your code should NOT need this. Use with care! -->
        <groupId>org.powermock</groupId>
        <artifactId>powermock-module-junit4</artifactId>
        <version>${powermock.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.powermock</groupId>
        <artifactId>powermock-api-mockito</artifactId>
        <version>${powermock.version}</version>
        <scope>test</scope>
        <exclusions>
          <exclusion>
            <!-- Artifact mockito-all contains inlined dependencies. Inclusion leads to duplicate classes having likely conflicting versions in classpath. -->
            <!-- Instead, mockito-core is declared as dependency, which leaves it up to Maven to resolve possible version conflicts. -->
            <!-- For more info, see: http://code.google.com/p/mockito/wiki/DeclaringMockitoDependency#mockito-core_VS_mockito-all -->
            <artifactId>mockito-all</artifactId>
            <groupId>org.mockito</groupId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <!-- Adds, among other things a JUnitRunner implementation, that eases -->
        <!-- setting up a spring context in tests. -->
        <groupId>org.springframework</groupId>
        <artifactId>spring-test</artifactId>
        <version>${spring.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <!-- "fongo" stands for "fake mongo", i.e. it is an in-memory replacement -->
        <!-- for MongoDb. Look out for incompatibilities with an "actual" MongoDb -->
        <!-- installation, especially with queries -->
        <groupId>com.foursquare</groupId>
        <artifactId>fongo</artifactId>
        <version>${fongo.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <!-- Introduces some parameterizing annotations to JUnit -->
        <groupId>pl.pragmatists</groupId>
        <artifactId>JUnitParams</artifactId>
        <version>${JUnitParams.version}</version>
        <scope>test</scope>
      </dependency>


      <!-- Logging -->
      <dependency>
        <!-- The recommended logging API http://www.slf4j.org/ -->
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <!-- The native back-end for SLF4J -->
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback.version}</version>
      </dependency>
      <!-- slf4j bindings and bridges -->
      <!-- NOTE 1: Do not place more than one binding on your class path, -->
      <!-- as the manual http://www.slf4j.org/manual.html says -->
      <!-- On bridging, see http://www.slf4j.org/legacy.html -->
      <!-- NOTE 2: a binding and a corresponding bridge MUST NOT be on the class path simultaneously. -->
      <!-- This is *probably* true for pair (slf4j-simple, sysout-over-slf4j) also. -->
      <dependency>
        <!-- log4j binding for slf4j -->
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-log4j12</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <!-- log4j bridge for slf4j -->
        <groupId>org.slf4j</groupId>
        <artifactId>log4j-over-slf4j</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <!-- Jakarta Commons Logging binding for slf4j -->
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-jcl</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <!-- Jakarta Commons Logging bridge for slf4j -->
        <groupId>org.slf4j</groupId>
        <artifactId>jcl-over-slf4j</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <!-- java.util logging binding for slf4j -->
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-jdk14</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <!-- java.util logging bridge for slf4j -->
        <groupId>org.slf4j</groupId>
        <artifactId>jul-to-slf4j</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <!-- System.err "logger" for slf4j -->
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-simple</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <!-- Capture System.out "logging" -->
        <groupId>uk.org.lidalia</groupId>
        <artifactId>sysout-over-slf4j</artifactId>
        <version>${sysout-over-slf4j.version}</version>
      </dependency>
      <dependency>
        <!-- No logging at all with this one -->
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-nop</artifactId>
        <version>${slf4j.version}</version>
      </dependency>
      <dependency>
        <!-- To be able to use Groovy configuration for logback -->
        <groupId>org.codehaus.groovy</groupId>
        <artifactId>groovy</artifactId>
        <version>${groovy.version}</version>
      </dependency>
      <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>${log4j.version}</version>
      </dependency>

      <!-- Spring (framework, data, amqp and integration) -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-aop</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-aspects</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-beans</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context-support</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-core</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-expression</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-instrument</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-instrument-tomcat</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-jdbc</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-jms</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-orm</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-oxm</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-struts</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-tx</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-web</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-webmvc</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-webmvc-portlet</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <dependency>
        <!-- Commonly needed in conjunction with spring-aop -->
        <groupId>org.aspectj</groupId>
        <artifactId>aspectjrt</artifactId>
        <version>${aspectj.version}</version>
      </dependency>
      <dependency>
        <!-- Commonly needed in conjunction with spring-aop -->
        <groupId>org.aspectj</groupId>
        <artifactId>aspectjweaver</artifactId>
        <version>${aspectj.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.integration</groupId>
        <artifactId>spring-integration-core</artifactId>
        <version>${spring-integration.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.integration</groupId>
        <artifactId>spring-integration-amqp</artifactId>
        <version>${spring-integration.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.integration</groupId>
        <artifactId>spring-integration-ip</artifactId>
        <version>${spring-integration.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.integration</groupId>
        <artifactId>spring-integration-xmpp</artifactId>
        <version>${spring-integration.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.integration</groupId>
        <artifactId>spring-integration-file</artifactId>
        <version>${spring-integration.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.integration</groupId>
        <artifactId>spring-integration-http</artifactId>
        <version>${spring-integration.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.integration</groupId>
        <artifactId>spring-integration-groovy</artifactId>
        <version>${spring-integration.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.data</groupId>
        <artifactId>spring-data-mongodb</artifactId>
        <version>${spring-data.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.amqp</groupId>
        <artifactId>spring-rabbit</artifactId>
        <version>${spring-rabbit.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.security</groupId>
        <artifactId>spring-security-core</artifactId>
        <version>${spring-security.version}</version>
      </dependency>
      <dependency>
        <!-- To be able to use spring security XML schema configuration -->
        <groupId>org.springframework.security</groupId>
        <artifactId>spring-security-config</artifactId>
        <version>${spring-security.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.security</groupId>
        <artifactId>spring-security-remoting</artifactId>
        <version>${spring-security.version}</version>
      </dependency>

      <!-- Miscellanious useful stuff -->
      <dependency>
        <!-- JSON handling -->
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>${gson.version}</version>
      </dependency>
      <dependency>
        <!-- A collection of Google utilities for java, recommended -->
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>
      <dependency>
        <!-- JSON handling -->
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency>
        <!-- JSON handling -->
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${jackson.version}</version>
      </dependency>

      <dependency>
        <!-- A template engine http://freemarker.org/ -->
        <!-- See also notes on the old "org-less" groupId on page -->
        <!-- http://freemarker.org/freemarkerdownload.html -->
        <groupId>org.freemarker</groupId>
        <artifactId>freemarker</artifactId>
        <version>${freemarker.version}</version>
      </dependency>
      <dependency>
        <!-- Recommended for use instead of JDK's clunky Date/Time apparatus -->
        <groupId>joda-time</groupId>
        <artifactId>joda-time</artifactId>
        <version>${joda-time.version}</version>
      </dependency>
      <dependency>
        <!-- Contains, among other things, very helpful XPath support classes -->
        <groupId>net.sf.practicalxml</groupId>
        <artifactId>practicalxml</artifactId>
        <version>${practicalxml.version}</version>
      </dependency>
      <dependency>
        <!-- A very popular template engine http://velocity.apache.org/ -->
        <groupId>org.apache.velocity</groupId>
        <artifactId>velocity</artifactId>
        <version>${velocity.version}</version>
      </dependency>

      <!-- Findbugs et al -->
      <dependency>
        <groupId>com.google.code.findbugs</groupId>
        <artifactId>jsr305</artifactId>
        <version>${findbugs-jsr305.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.code.findbugs</groupId>
        <artifactId>annotations</artifactId>
        <version>${findbugs-annotations.version}</version>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>${maven-antrun-plugin.version}</version>
          <dependencies>
            <dependency>
              <!-- For the sshexec target -->
              <groupId>org.apache.ant</groupId>
              <artifactId>ant-jsch</artifactId>
              <version>${ant-jsch.version}</version>
            </dependency>
          </dependencies>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>${maven-assembly-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.assertj</groupId>
          <artifactId>assertj-assertions-generator-maven-plugin</artifactId>
          <version>${assertj-assertions-generator-maven-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>${build-helper-maven-plugin.version}</version>
          <executions>
            <execution>
              <id>add-integration-test-source</id>
              <phase>generate-test-sources</phase>
              <goals>
                <goal>add-test-source</goal>
              </goals>
              <configuration>
                <sources>
                  <source>${integration-test-src-path}</source>
                </sources>
              </configuration>
            </execution>
            <execution>
              <id>add-resource</id>
              <phase>generate-test-resources</phase>
              <goals>
                <goal>add-test-resource</goal>
              </goals>
              <configuration>
                <resources>
                  <resource>
                    <directory>${integration-test-resource-path}</directory>
                    <targetPath>${maven.test.dest}</targetPath>
                  </resource>
                </resources>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>buildnumber-maven-plugin</artifactId>
          <version>${buildnumber-maven-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.felix</groupId>
          <artifactId>maven-bundle-plugin</artifactId>
          <version>${maven-bundle-plugin.version}</version>
          <executions>
            <execution>
              <!-- We use the manifest goal as not to mandate using packaging "bundle" for all jars -->
              <id>bundle-manifest</id>
              <phase>process-classes</phase>
              <goals>
                <goal>manifest</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>${maven-clean-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
            <source>${maven-compiler-plugin.source.version}</source>
            <target>${maven-compiler-plugin.target.version}</target>
            <encoding>${project.build.sourceEncoding}</encoding>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>${maven-dependency-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${maven-deploy-plugin.version}</version>
          <!-- From http://stackoverflow.com/questions/14013644/hosting-a-maven-repository-on-github -->
          <configuration>
            <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-ear-plugin</artifactId>
          <version>${maven-ear-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-eclipse-plugin</artifactId>
          <version>${maven-eclipse-plugin.version}</version>
          <configuration>
            <downloadSources>true</downloadSources>
            <downloadJavadocs>true</downloadJavadocs>
            <!-- To overcome http://stackoverflow.com/questions/2544422/maven-eclipse-does-not-add-a-dependency -->
            <ajdtVersion>none</ajdtVersion>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-ejb-plugin</artifactId>
          <version>${maven-ejb-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>findbugs-maven-plugin</artifactId>
          <version>${findbugs-maven-plugin.version}</version>
          <configuration>
            <!-- NOTE: Changes must be duplicated to <report/plugins> block! -->
            <effort>${findbugs.effort}</effort>
            <failOnError>${findbugs.failOnError}</failOnError>
            <fork>${findbugs.fork}</fork>
            <includeTests>${findbugs.includeTests}</includeTests>
            <jvmArgs>${findbugs.jvmArgs}</jvmArgs>
            <maxHeap>${findbugs.maxHeap}</maxHeap>
            <maxRank>${findbugs.maxRank}</maxRank>
            <threshold>${findbugs.threshold}</threshold>
            <timeout>${findbugs.timeout}</timeout>
            <skip>${findbugs.skip}</skip>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>${maven-install-plugin.version}</version>
          <configuration>
            <createChecksum>true</createChecksum>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>${maven-jar-plugin.version}</version>
          <configuration>
            <archive>
              <manifest>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
              </manifest>
              <!-- Add project and build metadata to the artifact jar's MANIFEST.MF -->
              <manifestEntries>
                <!-- Maven magic values, see http://maven.apache.org/guides/introduction/introduction-to-the-pom.html#Available_Variables -->
                <Artifact-Group-Id>${project.groupId}</Artifact-Group-Id>
                <Artifact-Id>${project.artifactId}</Artifact-Id>
                <Artifact-Version>${project.version}</Artifact-Version>
                <Artifact-Build-Time>${maven.build.timestamp}</Artifact-Build-Time>
              </manifestEntries>
            </archive>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>${maven-javadoc-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-plugin-plugin</artifactId>
          <version>${maven-plugin-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-rar-plugin</artifactId>
          <version>${maven-rar-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>${maven-release-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven-resources-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>${maven-shade-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>${maven-site-plugin.version}</version>
          <executions>
            <execution>
              <!-- To be ready for Maven 3, see -->
              <!-- http://maven.apache.org/plugins/maven-site-plugin/maven-3.html#Site_descriptor_attachment -->
              <id>attach-descriptor</id>
              <goals>
                <goal>attach-descriptor</goal>
              </goals>
            </execution>
          </executions>
          <dependencies>
            <dependency>
              <!-- To use the include macro -->
              <!-- http://doxia-include.sourceforge.net/ -->
              <groupId>org.tinyjee.dim</groupId>
              <artifactId>doxia-include-macro</artifactId>
              <version>1.1</version>
            </dependency>
            <dependency>
              <!-- This dependency enables Confluence notation in auxiliary documentation, http://maven.apache.org/doxia/modules/index.html#Confluence -->
              <groupId>org.apache.maven.doxia</groupId>
              <artifactId>doxia-module-confluence</artifactId>
              <version>${doxia-module-confluence.version}</version>
            </dependency>
            <dependency>
              <groupId>org.apache.maven.doxia</groupId>
              <artifactId>doxia-module-xhtml</artifactId>
              <version>${doxia-module-xhtml.version}</version>
            </dependency>
          </dependencies>
        </plugin>

        <plugin>
          <groupId>com.github.github</groupId>
          <artifactId>site-maven-plugin</artifactId>
          <version>0.11</version>
          <configuration>
            <message>Maven artifacts for ${project.version}</message>  <!-- git commit message -->
            <noJekyll>true</noJekyll>                                  <!-- disable webpage processing -->
            <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory> <!-- matches distribution management repository url above -->
            <branch>refs/heads/master</branch>                       <!-- remote branch name -->
            <includes>
              <include>**/*</include>
            </includes>
            <repositoryName>${github-mvn-repo}</repositoryName>      <!-- github repo name -->
            <repositoryOwner>${github-repo-owner}</repositoryOwner>    <!-- github username  -->
            <merge>true</merge>
          </configuration>
          <executions>
            <!-- run site-maven-plugin's 'site' target as part of the build's normal 'deploy' phase -->
            <execution>
              <goals>
                <goal>site</goal>
              </goals>
              <phase>deploy</phase>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <version>${maven-source-plugin.version}</version>
          <executions>
            <execution>
              <id>attach-sources</id>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>${maven-surefire-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.tomcat.maven</groupId>
          <artifactId>tomcat6-maven-plugin</artifactId>
          <version>${tomcat6-maven-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.tomcat.maven</groupId>
          <artifactId>tomcat7-maven-plugin</artifactId>
          <version>${tomcat7-maven-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>${versions-maven-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>${maven-war-plugin.version}</version>
        </plugin>

      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-site-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>com.github.github</groupId>
        <artifactId>site-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <repositories>
    <repository>
      <id>FMI-os-mvn-repo</id>
      <url>https://raw.githubusercontent.com/${github-repo-owner}/${github-mvn-repo}/master</url>
      <snapshots>
        <enabled>true</enabled>
        <updatePolicy>always</updatePolicy>
      </snapshots>
    </repository>
  </repositories>

  <reporting>
    <plugins>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <version>${cobertura-maven-plugin.version}</version>
        <configuration>
          <formats>
            <format>html</format>
            <format>xml</format>
          </formats>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>${maven-dependency-plugin.version}</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>analyze-report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <version>${findbugs-maven-plugin.version}</version>
        <configuration>
          <!-- NOTE: Changes must be duplicated to <build/pluginManagement> block! -->
          <effort>${findbugs.effort}</effort>
          <failOnError>${findbugs.failOnError}</failOnError>
          <fork>${findbugs.fork}</fork>
          <includeTests>${findbugs.includeTests}</includeTests>
          <jvmArgs>${findbugs.jvmArgs}</jvmArgs>
          <maxHeap>${findbugs.maxHeap}</maxHeap>
          <maxRank>${findbugs.maxRank}</maxRank>
          <threshold>${findbugs.threshold}</threshold>
          <timeout>${findbugs.timeout}</timeout>
          <skip>${findbugs.skip}</skip>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${maven-javadoc-plugin.version}</version>
        <configuration>
          <detectLinks>true</detectLinks>
          <javadocVersion>${maven-javadoc-plugin.javadoc.version}</javadocVersion>
          <javadocExecutable>${maven-javadoc-plugin.javadoc.executable}</javadocExecutable>
          <!-- See http://maven.apache.org/plugins/maven-javadoc-plugin/javadoc-mojo.html#linksource -->
          <linksource>true</linksource>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>jdepend-maven-plugin</artifactId>
        <version>${jdepend-maven-plugin.version}</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>${maven-jxr-plugin.version}</version>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>l10n-maven-plugin</artifactId>
        <version>${l10n-maven-plugin.version}</version>
        <configuration>
          <locales>
            <locale>en</locale>
            <locale>sv</locale>
            <locale>fi</locale>
          </locales>
          <excludes>
            <exclude>**/*log4j.properties</exclude>
          </excludes>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-project-info-reports-plugin</artifactId>
        <version>${maven-project-info-reports-plugin.version}</version>
        <configuration>
          <showAvatarImages>${maven-project-info-reports-plugin.showAvatarImages}</showAvatarImages>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>${maven-surefire-report-plugin.version}</version>
        <configuration>
          <linkXRef>true</linkXRef>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>taglist-maven-plugin</artifactId>
        <version>${taglist-maven-plugin.version}</version>
        <configuration>
          <tagListOptions>
            <!-- Tag classes get rendered as separate sections in the report -->
            <tagClasses>
              <tagClass>
                <displayName>Todo Work</displayName>
                <tags>
                  <tag>
                    <matchString>todo</matchString>
                    <matchType>ignoreCase</matchType>
                  </tag>
                </tags>
              </tagClass>
              <tagClass>
                <displayName>Fixes</displayName>
                <tags>
                  <tag>
                    <matchString>FIXME</matchString>
                    <matchType>exact</matchType>
                  </tag>
                </tags>
              </tagClass>
            </tagClasses>
          </tagListOptions>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>versions-maven-plugin</artifactId>
        <version>${versions-maven-plugin.version}</version>
        <reportSets>
          <reportSet>
            <reports>
              <report>dependency-updates-report</report>
              <report>plugin-updates-report</report>
              <report>property-updates-report</report>
            </reports>
          </reportSet>
        </reportSets>
      </plugin>

    </plugins>
  </reporting>

  <profiles>

    <profile>
      <id>build-distribution</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <artifactId>maven-assembly-plugin</artifactId>
            <configuration>
              <descriptors>
                <descriptor>${maven-assembly-plugin.descriptor}</descriptor>
              </descriptors>
            </configuration>
            <executions>
              <execution>
                <id>make-assembly</id>
                <phase>package</phase>
                <goals>
                  <goal>single</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <configuration>
              <archive>
                <manifest>
                  <mainClass>${assembly.mainClass}</mainClass>
                  <addClasspath>${assembly.addClasspath}</addClasspath>
                  <classpathPrefix>${assembly.classpathPrefix}</classpathPrefix>
                </manifest>
              </archive>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>buildnumber</id>
      <activation>
        <!-- Activate explicitly by -Pbuildnumber or (preferably) in settings.xml. -->
        <!-- Jenkins will have this activated, so all Continuous Integration builds' -->
        <!-- jar results should have the build number header in their MANIFEST.MF -->
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>buildnumber-maven-plugin</artifactId>
            <configuration>
              <buildNumberPropertyName>buildNumber</buildNumberPropertyName>
              <!-- These should be fine for a Continuous Integration build, -->
              <!-- and should not interfere with release builds either. -->
              <doCheck>false</doCheck>
              <doUpdate>false</doUpdate>
              <useLastCommittedRevision>true</useLastCommittedRevision>
            </configuration>
            <executions>
              <execution>
                <phase>validate</phase>
                <goals>
                  <goal>create</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <version>${maven-jar-plugin.version}</version>
            <configuration>
              <archive>
                <manifestEntries>
                  <Implementation-Build>${buildNumber}</Implementation-Build>
                </manifestEntries>
              </archive>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>integration-test-copy</id>
      <activation>
        <!-- If this magical path exists, we trigger the copying -->
        <file>
          <exists>src/test-integration</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>


    <profile>
      <!-- Maven lifecycle mappings for Eclipse m2e plugin -->
      <id>m2e-lifecycle-mappings</id>
      <activation>
        <property>
          <name>m2e.version</name>
        </property>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <!-- This plugin doesn't actually exist, but this configuration is read by M2e. -->
              <groupId>org.eclipse.m2e</groupId>
              <artifactId>lifecycle-mapping</artifactId>
              <version>${m2e-lifecycle-mapping.version}</version>
              <configuration>
                <lifecycleMappingMetadata>
                  <pluginExecutions>
                    <pluginExecution>
                      <pluginExecutionFilter>
                        <groupId>org.apache.felix</groupId>
                        <artifactId>maven-bundle-plugin</artifactId>
                        <versionRange>[1.0.0,)</versionRange>
                        <goals>
                          <goal>manifest</goal>
                        </goals>
                      </pluginExecutionFilter>
                      <action>
                        <ignore />
                      </action>
                    </pluginExecution>
                    <pluginExecution>
                      <pluginExecutionFilter>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <versionRange>[1.0.0,)</versionRange>
                        <goals>
                          <goal>enforce</goal>
                        </goals>
                      </pluginExecutionFilter>
                      <action>
                        <ignore />
                      </action>
                    </pluginExecution>
                    <pluginExecution>
                      <!-- We'll enable maven-antrun-plugin to be run at an early phase by M2E to make Checkstyle suppressions workaround working (see comments for 
                        maven-antrun-plugin in m2e-quality profile). -->
                      <pluginExecutionFilter>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <versionRange>[1.0,)</versionRange>
                        <goals>
                          <goal>run</goal>
                        </goals>
                      </pluginExecutionFilter>
                      <action>
                        <execute>
                          <runOnIncremental>false</runOnIncremental>
                          <runOnConfiguration>true</runOnConfiguration>
                        </execute>
                      </action>
                    </pluginExecution>
                  </pluginExecutions>
                </lifecycleMappingMetadata>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>

    <profile>
      <id>osgi-bundler</id>
      <!-- Can be activated explicitly, or by having the magic file or directory in place -->
      <activation>
        <activeByDefault>false</activeByDefault>
        <file>
          <exists>src/main/resources/osgi</exists>
        </file>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.felix</groupId>
            <artifactId>maven-bundle-plugin</artifactId>
            <configuration>
              <instructions>
                <!-- Override the default property ${pom.organization.url} -->
                <!-- see <http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html#ApacheFelixMavenBundlePlugin%28BND%29-DefaultBehavior> -->
                <Bundle-DocURL>${project.url}</Bundle-DocURL>
              </instructions>
            </configuration>
          </plugin>
          <plugin>
            <!-- This will actually manipulate the manifest -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <version>${maven-jar-plugin.version}</version>
            <configuration>
              <archive>
                <manifestFile>${maven-bundle-plugin.manifest.path}</manifestFile>
              </archive>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>versions-check</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <repositories>
        <repository>
          <id>central</id>
          <url>http://uk.maven.org/maven2</url>
          <releases>
            <enabled>true</enabled>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </repository>
      </repositories>
      <pluginRepositories>
        <pluginRepository>
          <id>central</id>
          <url>http://uk.maven.org/maven2</url>
          <releases>
            <enabled>true</enabled>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
        </pluginRepository>
      </pluginRepositories>
    </profile>

  </profiles>

</project>
